3. Freebayes Variant Calling and .bam file generation

(3) Freebayes Variant Calling and .bam file generation
## This step maps the Illumina paired-end reads of each query species to the reference genome, in this case Myotis lucifugus (myoLuc2.fa)
## The Freebayes pipeline uses BWA-mem, and some GATK tools such as Haplotype caller
## Freebayes uses the paired forward, paired reverse, and unpaired reads (3 files)
## Each of the query species were run through Freebayes via a batch script generator (batch_freebayes_variant_all.py)
## All pipeline commands using mVelifer as the query species listed below:
	### Module versions: intel/18.0.3.222 impi/2018.3.222 java/1.8.0 bwa/0.7.17 samtools/1.9
## RUN TIME = 12-24 hours, creation of .merged.RG_dedup.bam is around 10-15 hours in

module load intel impi bwa samtools java python3
cd /lustre/scratch/npaulat/freebayes_2019/mVelifer

## NOTE: These first three steps only have to be done once, if the files are in a directory that can be accessed in other runs

java -Xmx12g -Djava.io.tmpdir=tmp -jar /lustre/work/daray/software/picardtools/picard-tools-2.5.0/picard.jar CreateSequenceDictionary R=/lustre/scratch/npaulat/freebayes_2019/myoLuc_MELT_scaffolds.fa O=/lustre/scratch/npaulat/freebayes_2019/myoLuc_MELT_scaffolds.dict TMP_DIR=tmp 

samtools faidx /lustre/scratch/npaulat/freebayes_2019/myoLuc_MELT_scaffolds.fa

bwa index /lustre/scratch/npaulat/freebayes_2019/myoLuc_MELT_scaffolds.fa

## The steps below must be done on each set of read files

bwa mem -M -t 36 /lustre/scratch/npaulat/freebayes_2019/myoLuc2.fa /lustre/scratch/daray/Ray_low_cov_work/genome_data_processed/TK167846_R1_paired.fastq.gz /lustre/scratch/daray/Ray_low_cov_work/genome_data_processed/TK167846_R2_paired.fastq.gz | samtools view -Sb - > mVelifer.iteration1.pe.bam 2> mVelifer.iteration1.pe.bam.stderr 

bwa mem -M -t 36 /lustre/scratch/npaulat/freebayes_2019/myoLuc2.fa /lustre/scratch/daray/Ray_low_cov_work/genome_data_processed/TK167846_RX_cat.fastq.gz | samtools view -Sb - > mVelifer.iteration1.se.bam 2> mVelifer.iteration1.se.bam.stderr 

java -Xmx12g -Djava.io.tmpdir=tmp -jar /lustre/work/daray/software/picardtools/picard-tools-2.5.0/picard.jar MergeSamFiles I=mVelifer.iteration1.pe.bam I=mVelifer.iteration1.se.bam O=mVelifer.iteration1.merged.bam USE_THREADING=TRUE VALIDATION_STRINGENCY=LENIENT TMP_DIR=tmp 

samtools sort -o mVelifer.iteration1.merged.sorted.bam -T hold.sorting -@ 36 mVelifer.iteration1.merged.bam 

java -Xmx12g -Djava.io.tmpdir=tmp -jar /lustre/work/daray/software/picardtools/picard-tools-2.5.0/picard.jar AddOrReplaceReadGroups I=mVelifer.iteration1.merged.bam O=mVelifer.iteration1.merged.RG.bam SO=coordinate LB=mVelifer_gexome PL=illumina PU=misc SM=mVelifer  VALIDATION_STRINGENCY=LENIENT TMP_DIR=tmp 

java -Xmx12g -Djava.io.tmpdir=tmp -jar /lustre/work/daray/software/picardtools/picard-tools-2.5.0/picard.jar MarkDuplicates I=mVelifer.iteration1.merged.RG.bam O=mVelifer.iteration1.merged.RG_dedup.bam VALIDATION_STRINGENCY=LENIENT M=mVelifer.iteration1.dup_metrics TMP_DIR=tmp 

samtools index mVelifer.iteration1.merged.RG_dedup.bam 

/lustre/work/daray/software/freebayes/scripts/fasta_generate_regions.py /lustre/scratch/npaulat/freebayes_2019/myoLuc2.fa.fai 100000 >/lustre/scratch/npaulat/freebayes_2019/myoLuc2.fa.100kbp.regions.txt 

/lustre/work/daray/software/freebayes/scripts/freebayes-parallel_mod /lustre/scratch/npaulat/freebayes_2019/myoLuc2.fa.100kbp.regions.txt 36 -f /lustre/scratch/npaulat/freebayes_2019/myoLuc2.fa mVelifer.iteration1.merged.RG_dedup.bam >mVelifer.iteration1.all.raw.vcf 

## NOTE: The steps below are my own additions, from the previous version of this project pipeline where I was trying to make a pseudo-reference genome via 7 iterations of Freebayes (using GATK AlternateConsensusMaker); they should not actually be necessary for producing accurate/more accurate results here, but I am testing two SNP datasets, one made without these extra steps (all.filtered.vcf), one with (all.filtered_aligned_prims.vcf, to see if there is a difference between them in terms of SNP count/frequency

java -Xmx12g -Djava.io.tmpdir=tmp -jar /lustre/work/daray/software/GenomeAnalysisTK-3.8-0-ge9d806836/GenomeAnalysisTK.jar -T LeftAlignAndTrimVariants -R /lustre/scratch/npaulat/freebayes_2019/myoLuc2.fa -V mVelifer.iteration1.all.raw.vcf -o mVelifer.iteration1.all.raw_aligned.vcf 

java -Xmx12g -Djava.io.tmpdir=tmp -jar /lustre/work/daray/software/GenomeAnalysisTK-3.8-0-ge9d806836/GenomeAnalysisTK.jar -T VariantsToAllelicPrimitives -R /lustre/scratch/npaulat/freebayes_2019/myoLuc2.fa -V mVelifer.iteration1.all.raw_aligned.vcf -o mVelifer.iteration1.all.raw_aligned_prims.vcf 



## Alternate path to first use GATK VariantFiltration to do quality filtering (does not seem to have desired effects)

## NOTE: This step filters out calls with mean mapping quality (MQM) of aobserved alternate allele less than 30.0, mean mapping quality (MQMR) of observed reference allele less than 30.0, read depth (DP) less than 5 or more than 60. This could alternatively be done with bcftools in the SNP dataset filtering later on (6a)

java -Xmx12g -Djava.io.tmpdir=tmp -jar /lustre/work/daray/software/GenomeAnalysisTK-3.8-0-ge9d806836/GenomeAnalysisTK.jar -T VariantFiltration -R /lustre/scratch/npaulat/freebayes_2019/myoLuc2.fa -V mVelifer.iteration1.all.raw.vcf --filterExpression "MQM < 30.0 || MQMR < 30.0 || DP < 5 || DP > 60" --filterName mqm30-mqmr30-5dp60 -o mVelifer.iteration1.all.filtered.vcf 

## NOTE: The steps below are my own additions, from the previous version of this project pipeline where I was trying to make a pseudo-reference genome via 7 iterations of Freebayes (using GATK AlternateConsensusMaker); they should not actually be necessary for producing accurate/more accurate results here, but I am testing two SNP datasets, one made without these extra steps (all.filtered.vcf), one with (all.filtered_aligned_prims.vcf, to see if there is a difference between them in terms of SNP count/frequency

java -Xmx12g -Djava.io.tmpdir=tmp -jar /lustre/work/daray/software/GenomeAnalysisTK-3.8-0-ge9d806836/GenomeAnalysisTK.jar -T LeftAlignAndTrimVariants -R /lustre/scratch/npaulat/freebayes_2019/myoLuc2.fa -V mVelifer.iteration1.all.filtered.vcf -o mVelifer.iteration1.all.filtered_aligned.vcf 

java -Xmx12g -Djava.io.tmpdir=tmp -jar /lustre/work/daray/software/GenomeAnalysisTK-3.8-0-ge9d806836/GenomeAnalysisTK.jar -T VariantsToAllelicPrimitives -R /lustre/scratch/npaulat/freebayes_2019/myoLuc2.fa -V mVelifer.iteration1.all.filtered_aligned.vcf -o mVelifer.iteration1.all.filtered_aligned_prims.vcf 

java -Xmx12g -Djava.io.tmpdir=tmp -jar /lustre/work/daray/software/GenomeAnalysisTK-3.8-0-ge9d806836/GenomeAnalysisTK.jar -T FastaAlternateReferenceMaker -R /lustre/scratch/npaulat/freebayes_2019/myoLuc2.fa -o mVelifer.iteration1.all.consensus.fa -V mVelifer.iteration1.all.filtered_aligned_prims.vcf
