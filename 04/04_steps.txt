5. Quality filtering and reformatting
	a. Run Deletion results file through Orientation script; invert Deletion genotypes
	b.Concatenate all Split results into single file
	c. Run Split result file and Deletion result file through filtering script
	d. Edit TE names to match between Split and Deletion results
	e. Reformat and concatenate Split and Deletion results
	f. Run concatenated results file through filtering script
	g. Filter/separate results into NW vs OW polymorphic file, and all others file
  
  
  (5) Quality filtering and reformatting
	## NOTE: Info of MELT result info columns
		##INFO=<ID=ASSESS,Number=1,Type=Integer,Description="Provides information on evidence availible to decide insertion site.0 = No overlapping reads at site;1 = Imprecise breakpoint due to greater than expected distance between evidence;2 = discordant pair evidence only -- No split read information;3 = left side TSD evidence only;4 = right side TSD evidence only;5 = TSD decided with split reads, highest possible quality">
		##INFO=<ID=TSD,Number=1,Type=String,Description="Precise Target Site Duplication for bases, if unknown, value will be NULL">
		##INFO=<ID=INTERNAL,Number=2,Type=String,Description="If insertion internal or close to a gene, listed here followed by a discriptor of the location in the gene (either INTRON, EXON_#, 5_UTR, 3_UTR, PROMOTER, or TERMINATOR). If multiple genes intersected, will be seperated by '\|'">
		##INFO=<ID=SVTYPE,Number=1,Type=String,Description="Type of structural variant">
		##INFO=<ID=SVLEN,Number=1,Type=Integer,Description="Difference in length between REF and ALT alleles; If unknown, will be -1">
		##INFO=<ID=MEINFO,Number=4,Type=String,Description="Mobile element info of the form NAME,START,END,POLARITY; If START or END is unknown, will be -1; If POLARITY is unknown, will be 'null'">
		##INFO=<ID=DIFF,Number=.,Type=String,Description="Coverage and Differences in relation to the HAL1v1Em10 reference. Form is %2XCoverage:Differences, with differences delimited by ','">
		##INFO=<ID=LP,Number=1,Type=Integer,Description="Total number of discordant pairs supporting the left side of the breakpont">
		##INFO=<ID=RP,Number=1,Type=Integer,Description="Total number of discordant pairs supporting the right side of the breakpont">
		##INFO=<ID=RA,Number=1,Type=Float,Description="Ratio between LP and RP, reported as log2(LP / RP)">
		##INFO=<ID=PRIOR,Number=1,Type=String,Description="True if this site was not discovered in this dataset, but was included on a provided priors list">
		##INFO=<ID=SR,Number=1,Type=Integer,Description="Total number of SRs at the estimated breakpoint for this site. Recomended to filter sites with <= 2 SRs">
		##INFO=<ID=ISTP,Number=1,Type=Integer,Description="Will be approximate location of twin priming breakpoint in relation to L1 reference; 0 if not twin primed; -1 if no measurement">
		##FILTER=<ID=s25,Description="Greater than 25.0% of samples do not have data">
		##FILTER=<ID=rSD,Description="Ratio of LP to RP is greater than 2.0 standard deviations">
		##FILTER=<ID=hDP,Description="More than the expected number of discordant pairs at this site are also split">
		##FILTER=<ID=ac0,Description="No individuals in this VCF file were identified with this insertion">
		##FILTER=<ID=lc,Description="MEI is embedded in a low complexity region">
		##FORMAT=<ID=GT,Number=1,Type=String,Description="Genotype">
		##FORMAT=<ID=GL,Number=3,Type=Float,Description="Genotype likelihood">

	(5a) Run Deletion results file through Orientation script; invert Deletion genotypes
	## MELT Deletion results are TE calls based off of the reference genome's known TE sites, via RepeatMasker, and as such (irritatingly) the VCF does not include the orientation of the call (since it is in the input .bed file)
	## I made a script to tack the orientation back on, but the script also removes any MELT calls that are not close enough to the original RM call to determine which one it is (essentially quality filtering)
		## The input is 1) MELT Deletion results in .bed format (Chromosome, Position, End, SVTYPE), 2) RepeatMasker .out.bed file of TEs of interest (from step 4c-1D)
		## To make the Deletion.bed file, open VCF in excel, remove all comment/header lines, insert column[3], fill with =Pos+SVLENGTH, rearrange/cut CHROM, POS, END, SVTYPE columns into text editor, save as .bed file with no headers
	## The add_orientation script creates a dictionary of the MELT Deletion results in a basic .bed format, the allTEs_filtered.out.bed, and then compares the keys and key values in the dictionaries.
	## If the chromosome/scaffold names match, it checks the TE name (e.g. HAL1-1B_ML)
	## If the TE names match, it checks if the start positions are within 50 bases of each other
	## It makes a list of all possible matches within 50 bases of the called start position
	## If there is only one match, the orientation of that call is added to the output MELT .bed file
	## If there are multiple possible matches, it choses the one that has the start position closest to the MELT call (this is an uncommon situation, generally)
	## If there are no matching calls within 50 bases, the orientation "NONE" is added to the output .bed file
	## All calls are kept in the main output .bed file, because then the columns can be easily inserted into the main MELT results spreadsheet, and the "NONE" calls filtered out and removed there, instead of trying to figure out which few calls were removed in the script
	############# Remember to edit scripts so that the output names are dynamic ##########
	
	for i in mut8 mut10 mut 15; do python add_orientation3.py -i /lustre/scratch/npaulat/MELTv2.1.5/MELT/${i}_DEL_results.bed -r /lustre/scratch/npaulat/MELTv2.1.5/references/beds/allTEs_filtered.out.bed -od /lustre/scratch/npaulat/MELTv2.1.5/MELT/filtering/; done
	
	(5b)Concatenate all Split results into single file
	for i in mut8 mut10 mut15; do cd /lustre/scratch/npaulat/MELTv2.1.5/MELT/${i};
	ls | grep -V del | cat *.vcf > ${i}_SPLIT_results.vcf; done
	
	(5c) Run Split result file and Deletion result file through filtering script
	## Must reformat raw .vcf file to remove extra columns
	## First complete the following manual Excel filters
		## 1) PASS flag
		## 2) ASSESS >= 2
		## 3) exclude any hits with ./. genotypes
		## 4) exclude any hits < 5kb from scaffold edge (POS)
		## (add?) 5) exclude any hits with 0 or -1 as the length (MELT couldn't determine)
	## Then remove all extraneous info/info columns, and add MODULE and mLuci GENOTYPE columns, with final results file being CHROM, POS, END, SVTYPE, SVLENGTH, ORIENTATION, GENOTYPES 1-12 (insert mLuci genotype column, 1/1 for DEL, 0/0 for SPLIT), MODULE (SPLIT or DELETION)
	## Paste the reformatted Split and Del sheets into a single sheet
	## Also paste it into another new workbook and save that separately (will save you computing power later to only have one sheet, also needs to be separate for downstream analysis)
	############# Remember to edit scripts so that the output names are dynamic ###########
	
	for i in mut8 mut10 mut 15; do python rm_most_dups_split.py -i ${i}_SPLIT_results.vcf -d /lustre/scratch/npaulat/MELTv2.1.5/MELT/${i} -od /lustre/scratch/npaulat/MELTv2.1.5/MELT/${i}; done
	
	for i in mut8 mut10 mut 15; do python rm_most_dups7.py -i ${i}_DEL_results.vcf -d /lustre/scratch/npaulat/MELTv2.1.5/MELT/ -od /lustre/scratch/npaulat/MELTv2.1.5/MELT/; done
	
	(5d) Edit TE names to match between Split and Deletion results
	## Just do this in Excel - copy/paste DEL result names for SPLIT TE names
	
	(5e) Reformat and concatenate Split and Deletion results
	## Copy filtered Split and Deletion results into different spreadsheets in a new Excel file
	## Then remove all extraneous info/info columns, and add MODULE and mLuci GENOTYPE columns, with final results file being CHROM, POS, END, SVTYPE, SVLENGTH, ORIENTATION, GENOTYPES 1-12 (insert mLuci genotype column, 1/1 for DEL, 0/0 for SPLIT), MODULE (SPLIT or DELETION)
	## Paste the reformatted Split and Del sheets into a single sheet
	## Also paste it into another new workbook and save that separately (will save you computing power later to only have one sheet, also needs to be separate for downstream analysis)
	
	(5f) Run concatenated results file through filtering script
	
	python rm_most_dups7.py -i MELT_cat_results.bed -d /lustre/scratch/npaulat/MELTv2.1.5/MELT/ -od /lustre/scratch/npaulat/MELTv2.1.5/MELT/
	
	## Final manual filtering: in Excel, remove all hits that are < 10kb from the end of a scaffold to limit any effects of misassembly on scaffold edges
	
	(5g) Filter/separate results into NW vs OW polymorphic file, and all others file
	## In Excel, filter the results for hits with mDavi = 0/1 or 1/1 with 2+ other species being 0/0; or mDavi = 0/0 and 2+ others being 0/1 or 1/1
	## Copy paste these into a new file, save as NW_OW_polymorphic_MELT.xlsx
